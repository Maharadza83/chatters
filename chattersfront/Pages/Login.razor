@page "/login"
@inject AuthService AuthService
@inject CustomAuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@using chattersfront.Models

<h3>Logowanie i Rejestracja</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div style="color: red;">@ErrorMessage</div>
}

<div style="margin-bottom: 20px;">
    <h4>Logowanie</h4>
    <input type="email" @bind="LoginRequest.Email" placeholder="Email" /><br />
    <input type="password" @bind="LoginRequest.Password" placeholder="Hasło" /><br />
    <button @onclick="HandleLogin">Zaloguj</button>
</div>

<div>
    <h4>Rejestracja</h4>
    <input type="email" @bind="RegisterRequest.Email" placeholder="Email" /><br />
    <input type="password" @bind="RegisterRequest.Password" placeholder="Hasło" /><br />
    <input type="text" @bind="RegisterRequest.FullName" placeholder="Imię i Nazwisko" /><br />
    <input type="text" @bind="RegisterRequest.OrganizationName" placeholder="Nazwa Organizacji" /><br />
    <input type="text" @bind="RegisterRequest.ProjectName" placeholder="Nazwa Projektu" /><br />
    <button @onclick="HandleRegister">Zarejestruj</button>
</div>

@code {
    private LoginRequest LoginRequest { get; set; } = new LoginRequest();
    private RegisterRequest RegisterRequest { get; set; } = new RegisterRequest();
    private string ErrorMessage { get; set; } = string.Empty;

    private async Task HandleLogin()
    {
        ErrorMessage = string.Empty;
        var response = await AuthService.Login(LoginRequest);
        if (response != null && !string.IsNullOrEmpty(response.Token))
        {
            // Nie musimy już nic robić, AuthService sam powiadomi providera.
            Navigation.NavigateTo("/chat"); // Przekieruj do strony czatu po zalogowaniu
        }
        else
        {
            ErrorMessage = "Logowanie nieudane. Sprawdź dane.";
        }
    }

    private async Task HandleRegister()
    {
        ErrorMessage = string.Empty;
        var success = await AuthService.Register(RegisterRequest);
        if (success)
        {
            // Po udanej rejestracji, spróbuj automatycznie zalogować.
            LoginRequest.Email = RegisterRequest.Email;
            LoginRequest.Password = RegisterRequest.Password;
            await HandleLogin();
        }
        else
        {
            ErrorMessage = "Rejestracja nieudana. Sprawdź dane.";
        }
    }
}
